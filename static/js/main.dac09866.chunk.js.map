{"version":3,"sources":["images/ingress5.png","images/twitter.svg","images/space.png","images/react-logo3.svg","images/error-500.png","images/Error404.jpg","images/Dr.Stone.jpg","componets/gravatar.js","componets/badge.js","componets/badgeForm.js","api.js","componets/loader.js","componets/pageLoading.js","pages/badgeNew.js","componets/badgesList.js","componets/pageError.js","componets/miniLoader.js","pages/badges.js","pages/badgeEdit.js","componets/modal.js","componets/deleteBadgeModal.js","pages/badgeDetails.js","pages/badgeDetailsContainer.js","componets/navbar.js","componets/layout.js","pages/notFound.js","pages/Home.js","componets/app.js","index.js"],"names":["module","exports","__webpack_require__","p","Gravatar","props","email","hash","md5","react_default","a","createElement","className","src","concat","alt","Badge","_this$props","this","firstName","lastName","jobTitle","avatarUrl","twitter","confLogo","gravatar","twitterLogo","React","Component","BadgeForm","handleClick","e","console","log","_this","state","Fragment","onSubmit","onChange","type","name","value","formValues","required","onClick","error","message","BASE_URL","simulateNetworkLatency","ms","min","arguments","length","undefined","max","Math","floor","random","randomNumber","Promise","resolve","setTimeout","callApi","_callee","endpoint","options","url","response","data","_args","regenerator_default","wrap","_context","prev","next","headers","Content-Type","Accept","fetch","sent","json","abrupt","stop","api","badges","list","create","badge","method","body","JSON","stringify","read","badgeId","update","updates","remove","Loader","PageLoading","loader_Loader","BadgeNew","loading","form","handleChange","setState","Object","objectSpread","defineProperty","target","handleSubmit","preventDefault","history","push","t0","pageLoading","componets_badge","componets_badgeForm","BadgesListItem","BadgesList","_useSearchBadges","_React$useState","useState","_React$useState2","slicedToArray","query","setQuery","_React$useState3","_React$useState4","filteredBadges","setFilteredBadges","useMemo","result","filter","toLowerCase","includes","useSearchBadges","map","key","id","Link","to","badgesList_BadgesListItem","PageError","error500","MiniLoader","Badges","fetchData","intervalID","setInterval","clearInterval","pageError","badgesList","ConfLogo","href","ReactLogo","miniLoader","BadgeEdit","match","params","_callee2","_context2","Modal","isOpen","ReactDOM","createPortal","onClose","children","document","getElementById","DeleteBadgeModal","modal","onDeleteBadge","BadgeDetails","onOpenModal","deleteBadgeModal","modalIsOpen","onCloseModal","BadgeDetailsContainer","handleOpenModal","handleCloseModal","handleDeleteBadge","badgeDetails","Navbar","logo","Layout","navbar","NotFound","Error404","Home","spaceConfLogoImage","DrStone","App","BrowserRouter","layout","Switch","Route","exact","path","component","container","render","app"],"mappings":"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","file":"static/js/main.dac09866.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ingress5.d8917de2.png\";","module.exports = __webpack_public_path__ + \"static/media/twitter.2de2bfa1.svg\";","module.exports = __webpack_public_path__ + \"static/media/space.edac52f4.png\";","module.exports = __webpack_public_path__ + \"static/media/react-logo3.06e73328.svg\";","module.exports = __webpack_public_path__ + \"static/media/error-500.772e3ffa.png\";","module.exports = __webpack_public_path__ + \"static/media/Error404.3e2b05c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Dr.Stone.3d899b30.jpg\";","import React from \"react\"\r\nimport md5 from \"md5\"\r\n\r\nconst Gravatar = (props) => {\r\n    const email = props.email\r\n    const hash = md5(email)\r\n\r\n    return(\r\n        <img className={props.className} src={`https://www.gravatar.com/avatar/${hash}?d=identicon`} alt=\"Avatar\"/>\r\n    )\r\n}\r\n\r\nexport default Gravatar","import React from \"react\"\r\nimport \"./styles/Badge.css\"\r\n// import confLogo from \"../images/badge-header.svg\"\r\nimport confLogo from \"../images/ingress5.png\"\r\nimport Gravatar from \"./gravatar\"\r\nimport twitterLogo from \"../images/twitter.svg\"\r\nclass Badge extends React.Component {\r\n    // render() {\r\n    //     const view = (<h1>Badge</h1>)\r\n    //     return view\r\n    // }\r\n    render() {\r\n        const {\r\n            firstName,\r\n            lastName,\r\n            avatarUrl,\r\n            jobTitle,\r\n            twitter,\r\n            email\r\n            } = this.props\r\n        return (\r\n            <div className=\"Badge\">\r\n                <div className=\"Badge__header\">\r\n                    <img className=\"confLogo\" src={confLogo} alt=\"Logo\"/>\r\n                </div>\r\n\r\n                <div className=\"Badge__section-name\">\r\n                    {/* <img className=\"Badge__avatar\" src={avatarUrl} alt=\"Avatar\"/> */}\r\n                    <Gravatar className=\"Badge__avatar\" email={email} alt=\"Avatar\"/>\r\n                    <h1>{firstName} <br/>{lastName}</h1>\r\n                </div>\r\n\r\n                <div className=\"Badge__section-info\">\r\n                    <h3>{jobTitle}</h3>\r\n                    <span><img className=\"twitter-logo\" src={twitterLogo} alt=\"logo de twitter\"/></span><div>@{twitter}</div>\r\n                    \r\n                </div>\r\n                <div className=\"Badge__footer\">\r\n                    <p>#spaceconfig</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Badge","import React from \"react\"\r\nimport \"./styles/badgeForm.css\"\r\nclass BadgeForm extends React.Component {\r\n    \r\n    // handleChange = (e) =>{\r\n    //     // console.log({e}) //Recordar que cuando se trabaja con react, muchas cosas se van a manejar como si de objetos se tratasen\r\n    //     // console.log({\r\n    //     //     name: e.target.name,\r\n    //     //     value: e.target.value})\r\n    //     this.setState({//función de la clase component llamada setState, nos sirve paraguardar información\r\n    //         // firstName: e.target.value, // en lugar de guardar todo en first name, vamos a pasar una llave, una variable para guardar la \r\n    //         [e.target.name]: e.target.value,\r\n    //     })\r\n    // }\r\n    //handleChange, el cuál es el método que maneja la información del evento lo vamos a eliminar de acá, puesto que ahora esto se va a manejar desde la página, es decir, BadgeNew\r\n    handleClick = e => {\r\n        // e.preventDefault()\r\n        console.log(\"El formulario fue enviado\")\r\n        console.log(this.state)\r\n    }\r\n\r\n    // handleSubmit = (e) =>{\r\n    //     console.log(\"Click en el botón\")\r\n    //     console.log(this.state)\r\n    // }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <form className=\"form-container\" onSubmit={this.props.onSubmit}>\r\n                {/*Ya no vamos a usar el método declarado, usaremos el prop que maneja el cambio  */}\r\n                    <div className=\"form-group\">\r\n                        <label>Frist Name</label>\r\n                        <input \r\n                            onChange={this.props.onChange}  \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            name=\"firstName\"\r\n                            value={this.props.formValues.firstName}\r\n                            required\r\n                        />\r\n                        {/*Eventos con react, en un input cuando escribimos, obtenemos un evento onChange, la vamos a manejar con un método de la clase que se debe crear, suele llamarse handleChange */}\r\n                    </div>\r\n                    <div>\r\n                        <label>Last Name</label>\r\n                        <input \r\n                            onChange={this.props.onChange}  \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            name=\"lastName\"\r\n                            value={this.props.formValues.lastName}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Email</label>\r\n                        <input \r\n                            onChange={this.props.onChange}  className=\"form-control\" \r\n                            type=\"email\" \r\n                            name=\"email\"\r\n                            value={this.props.formValues.email}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Job Title</label>\r\n                        <input \r\n                            onChange={this.props.onChange}  \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            name=\"jobTitle\"\r\n                            value={this.props.formValues.jobTitle}\r\n                            required\r\n                        />\r\n                        <div>\r\n                        <label>Twitter</label>\r\n                        <input \r\n                            onChange={this.props.onChange}  \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            name=\"twitter\"\r\n                            value={this.props.formValues.twitter}\r\n                            required\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"save-button-container\">\r\n                        <button onClick={this.handleClick} className=\"btn btn-primary\">Save</button>\r\n                    </div>\r\n                    {/* vamos a desplegar un elmento condicionalmente, si el error existe (true, no es nulo), vamos a desplegra el siguiente párrafo */}\r\n                    {this.props.error && <p className=\"text-danger\" >{this.props.error.message}</p>}\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BadgeForm","const BASE_URL = 'http://localhost:3001';\r\n\r\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\r\nconst randomNumber = (min = 0, max = 1) =>\r\n  Math.floor(Math.random() * (max - min + 1)) + min;\r\nconst simulateNetworkLatency = (min = 30, max = 1500) =>\r\n  delay(randomNumber(min, max));\r\n\r\nasync function callApi(endpoint, options = {}) {\r\n  await simulateNetworkLatency();\r\n\r\n  options.headers = {\r\n    'Content-Type': 'application/json',\r\n    Accept: 'application/json',\r\n  };\r\n\r\n  const url = BASE_URL + endpoint;\r\n  const response = await fetch(url, options);\r\n  const data = await response.json();\r\n\r\n  return data;\r\n}\r\n\r\nconst api = {\r\n  badges: {\r\n    list() {\r\n      // throw new Error(\"500: Server Error\")\r\n      return callApi('/badges');\r\n    },\r\n    create(badge) {\r\n      // throw new Error(\"500: server error (este mensaje puede ser cualquiera)\")\r\n      // throw new Error(\"500: Server Error\")\r\n      return callApi(`/badges`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(badge),\r\n      });\r\n    },\r\n    read(badgeId) {\r\n      return callApi(`/badges/${badgeId}`);\r\n    },\r\n    update(badgeId, updates) {\r\n      return callApi(`/badges/${badgeId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updates),\r\n      });\r\n    },\r\n    // Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\r\n    remove(badgeId) {\r\n      return callApi(`/badges/${badgeId}`, {\r\n        method: 'DELETE',\r\n      });\r\n    },\r\n  },\r\n};\r\n\r\nexport default api;\r\n","import React, { Component } from 'react';\r\n\r\nimport './styles/Loader.css';\r\n\r\nexport default class Loader extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"lds-grid\">\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport \"./styles/PageLoading.css\"\r\nimport Loader from \"./loader\"\r\nconst PageLoading = () => {\r\n    return (\r\n        <div className=\"PageLoading\">\r\n            <Loader />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageLoading","import React from \"react\"\r\n//import Navbar from \"../componets/navbar\"\r\n// import header from \"../images/platziconf-logo.svg\"\r\n//import header from \"../images/ingress5.png\"\r\nimport \"./styles/BadgeNew.css\"\r\nimport Badge from \"../componets/badge\"\r\nimport BadgeForm from \"../componets/badgeForm\"\r\nimport api from \"../api\"\r\nimport PageLoading from \"../componets/pageLoading\"\r\nclass BadgeNew extends React.Component {\r\n        state = { \r\n            loading: false,//este loading se inicializa en falso debido a que estamos enviando los datos\r\n            error: null,\r\n            form: {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            jobTitle: \"\",\r\n            twitter: \"\"\r\n        } \r\n    }//inicializamos un state vacio, con una propiedad form también vacía\r\n    \r\n    \r\n    //form va a recibir y guardar la infomación del evento que acaba de ocurrir, esta información ahora le va a pertenecer a BadgeNew\r\n    \r\n    handleChange = e => {//para evitar que los datos del formulario se sobreestciban, vamos a \"dejar caer\" todos los valores que tenia el form anteriormente, y añadimos otro o sobre escribimos el que ya estaba guardado, usando los puntos suspensivos \"...\" que indica propagación de la propiedad (prop)\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n            [e.target.name]: e.target.value,\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault()\r\n        this.setState({ loading: true, error: null })\r\n\r\n        try {\r\n            await api.badges.create(this.state.form)\r\n            this.setState({ loading: false })\r\n\r\n            //Si hay existo, hacer que al guardar el badge en el formulario nos vayamos directamente a la página de la lista, recoerda que las páginas reciben 3 props, match, history y location\r\n            this.props.history.push(\"/badges\")\r\n\r\n        } catch (error) {\r\n            this.setState({ loading: false, error: error })\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.loading) {\r\n            return <PageLoading />\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                {/**<Navbar/>*/}\r\n                <div className=\"BadgeNew__hero\">\r\n                    {/* <img className=\"BadgeNew__hero-img img-fluid\" src={header} alt=\"Logo\"/> */}\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <Badge\r\n                                firstName={this.state.form.firstName || \"First Name\"} \r\n                                lastName={this.state.form.lastName || \"Last Name\"} \r\n                                jobTitle={this.state.form.jobTitle || \"Job Title\"}       \r\n                                twitter={this.state.form.twitter || \"Twitter\"}\r\n                                email={this.state.form.email}\r\n                                avatarUrl = \"https://media-exp1.licdn.com/dms/image/C5603AQFILCh7FRKErA/profile-displayphoto-shrink_200_200/0/1617145732921?e=1626307200&v=beta&t=lkVAqzsfDRPW5nmUDPnXEVA38bpJYTI6R8KKdqWlvxs\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h1 className=\"h1-title\">New Attendant</h1>\r\n                            {/**Ahora esta información del evento se la vamos a pasar a BadgeForm como un prop, para que el formulario tenga acceso al evento y acceda a la inforación.\r\n                            Hay que pasar los varlores del formulario desde BadgeNew hasta BadgeForm */}\r\n                                <BadgeForm \r\n                                    onChange={this.handleChange}\r\n                                    onSubmit={this.handleSubmit}\r\n                                    formValues={this.state.form}\r\n                                    error={this.state.error}//el error no siempre va a estar definido, puede ser un vacío, nulo, etc, depende de lo que regrese como error,en caso de haberlo\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BadgeNew","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./styles/BadgesList.css\"\r\nimport Gravatar from \"./gravatar\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport twitterLogo from \"../images/twitter.svg\"\r\nclass BadgesListItem extends React.Component {\r\n//     <ul className=\"list-unstyled BadgesList\">\r\n//     {this.props.badges.map((badge)=>{\r\n//     return(\r\n//         <li key={badge.id} className=\"BadgesListItem\">\r\n//             <img src={badge.avatarUrl} alt=\"\" className=\"BadgesListItem__avatar\"/>\r\n//             <div>\r\n//                 <div><strong>{badge.firstName} {badge.lastName}</strong></div>\r\n//                 <div className=\"Twitter__name\">\r\n//                 <span className=\"Twitter__logo\"></span>@{badge.twitter}\r\n//                 </div>\r\n//                 <div>{badge.jobTitle}</div>\r\n//             </div>\r\n//         </li>\r\n//     )\r\n//     })}\r\n// </ul>\r\n    render() {\r\n        return (\r\n            <div className=\"BadgesListItem\">\r\n                <Gravatar\r\n                    className=\"BadgesListItem__avatar\"\r\n                    email={this.props.badge.email}\r\n                />\r\n                <div>\r\n                    <b>\r\n                        {this.props.badge.firstName} {this.props.badge.lastName}\r\n                    </b>\r\n                    <div className=\"Twitter__name\">\r\n                    <span className=\"Twitter__logo\"><img className=\"Twitter__logo-img\" src={twitterLogo} alt=\"logo de twitter\"/></span>\r\n                    @{this.props.badge.twitter}\r\n                    </div>\r\n                    {this.props.badge.jobTitle}\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//Empaquetando en un costum hooks\r\nconst useSearchBadges = (badges) => {\r\n    //vamos a usar el hook de useState\r\n    const [ query, setQuery ] = React.useState(\"\")\r\n\r\n    //para filtrar vamos a utilizar la lista de los badges y el query\r\n\r\n    // const filteredBadges = badges.filter(badge => {\r\n    //     return`${badge.firstName} ${badge.lastName}`.toLowerCase().includes(query.toLowerCase())//Si regregesa y true, es decir lo que se escribe conincide con la lista de badges, va a retornar eso. Aunque esto puede ser un cuello de botella para nuestra aplicación, cuando tenga miles de badges, podría consumir muchos recursos hacer este filtrado de esta forma\r\n    // })\r\n    //useMemo recibe dos argumentos, una función (anónima) y una lista (en nuestro caso son badges y quuery los que nos interesa). useMemo calcula un valor la primera vez, para la próxima vez hacer la busqueda con lo que ya se calculo primero, pero esta información hay que guardarla en una variable a la que podamos acceder luego fuera de useMemo, así que lo vamos a convertir en estado (React.useState)\r\n    const [filteredBadges, setFilteredBadges] = React.useState(badges)\r\n    React.useMemo(() => {\r\n        const result = badges.filter(badge => {\r\n            return`${badge.firstName} ${badge.lastName}`.toLowerCase().includes(query.toLowerCase())\r\n        })\r\n\r\n        setFilteredBadges(result)\r\n    }, [badges, query])\r\n\r\n    return { query, setQuery, filteredBadges }\r\n}\r\n\r\nconst BadgesList = (props) => {\r\n    const badges = props.badges\r\n\r\n    const { query, setQuery, filteredBadges } = useSearchBadges(badges)\r\n\r\n    // if (badges.length === 0) {\r\n        if (filteredBadges.length === 0) {//ahora nos interesa que regrese los que concida con el filter\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"form-group mb-4 filter-container\">\r\n                    <label className=\"filter-label\">Search Badges</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        value={query}\r\n                        onChange={(e) => {\r\n                            console.log(e.target.value)\r\n                            setQuery(e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h3 className=\"not-found-message\">No badges were found</h3>\r\n                    {/* <Link className=\"btn btn-primary\" to=\"/badges/new\">\r\n                        Create new badge\r\n                    </Link> */}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return (\r\n    <div className=\"BadgesList\">\r\n    <div className=\"form-group mb-4 filter-container\">\r\n        <label className=\"filter-label\">Search Badges</label>\r\n        <input \r\n            type=\"text\" \r\n            className=\"form-control from-control-filter\" \r\n            value={query}\r\n            onChange={(e) => {\r\n                console.log(e.target.value)\r\n                setQuery(e.target.value)\r\n            }}\r\n        />\r\n        {/* Este va a ser un imput controlado, necesitamos que cada vez que se escriba un valor, lo guarde para luego utilizarlo pasándolo a travez del value */}\r\n    </div>\r\n        <ul className=\"list-unstyled\">\r\n            {/* {badges.map(badge => { */}\r\n            {filteredBadges.map(badge => {\r\n                return (\r\n                <li key={badge.id}>\r\n                    <Link\r\n                    className=\"text-reset text-decoration-none\"\r\n                    to={`/Curso-React-JS-platzi-badges/badges/${badge.id}`}\r\n                    >\r\n                    <BadgesListItem badge={badge} />\r\n                    </Link>\r\n                </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default BadgesList\r\n","import React from \"react\"\r\n\r\nimport \"./styles/PageError.css\"\r\n\r\nimport error500 from \"../images/error-500.png\"\r\n\r\nfunction PageError(props) {\r\n  // return <div className=\"PageError\">❌{props.error.message}😱</div>;\r\n  return (\r\n    <div className=\"PageError\">\r\n      <img className=\"error-img\" src={error500} alt=\"server-internal error\" />\r\n      <h1 className=\"h1-title\">{props.error.message}, please reload the page.</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageError;\r\n","import React, { Component } from 'react';\r\n\r\nimport './styles/Loader.css';\r\n\r\nclass MiniLoader extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"lds-grid\">\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MiniLoader","import React from \"react\"\r\nimport \"./styles/Badges.css\"\r\nimport ConfLogo from \"../images/ingress5.png\"\r\nimport ReactLogo from \"../images/react-logo3.svg\"\r\n// import ConfLogo from \"../images/space.png\"\r\nimport BadgesList from \"../componets/badgesList\"\r\nimport {Link} from \"react-router-dom\"\r\nimport api from \"../api\"\r\nimport PageLoading from \"../componets/pageLoading\"\r\nimport PageError from \"../componets/pageError\"\r\nimport MiniLoader from \"../componets/miniLoader\"\r\n//NOTA: Borré algunas notas sobre el ciclo de vida de los componentes, si quieres revisarlos regresa a ese commit o ve la notas\r\nclass Badges extends React.Component {\r\n    state = {//ahora vamos a traer los datos desde la api, se inicializan como undefinded\r\n        loading: true,\r\n        error: null,\r\n        data: undefined\r\n    }\r\n\r\n    // constructor(props) {//El constructor recibe props, el cual necesitamos para inicializar la SuperClase\r\n    //     super(props)\r\n    //     console.log(\"1.constructor()\")\r\n    //     this.state = {\r\n    //         data: [],//estado inicial vacío\r\n    //     }\r\n    // }\r\n\r\n    //console.log(\"3.componentDidMount()\")\r\n        //Este componente es el lugar adecuado para realizar una petición de datos, o actualización\r\n    componentDidMount() {\r\n        this.intervalID = setInterval(this.fetchData, 10000)//Hay que cancelarlo cuando la página se vaya\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.intervalID)\r\n        //con esto evitamos que el intervalo siga trabajando aún cuando dejamos la página\r\n    }\r\n\r\n    //Este fetchData al que hacemos referencia (con this) es un método de la clase que estamos declarando, no el fetch nativo de javascript\r\n    fetchData = async () => {\r\n        this.setState({ loading: true, error: null })//Declaramos el estado de loading en true y error en null, si no es la primera vez que se llama, se vuelve a pasar loading como true, y si existía un error este se cancela\r\n\r\n        try {\r\n            const data = await api.badges.list()\r\n            this.setState({ loading: false, data: data })//si obtenemos los datos los guardamos\r\n        } catch(error) {\r\n        this.setState({ loading: false, error: error })\r\n        }\r\n    }\r\n    //junto a esa actualiación se llama a:\r\n    // componentDidUpdate(propsPrevios, estadoPrevio){\r\n    //     console.log(\"5.componentDidUpdate\")\r\n    //     console.log({\r\n    //         prevProps: propsPrevios, PrevState:estadoPrevio\r\n    //     })\r\n\r\n    //     console.log({\r\n    //         props: this.props,\r\n    //         state: this.state,\r\n\r\n    //     })\r\n    // }\r\n    // componentDidUpdate(prevProps, PrevState){\r\n    //     console.log(\"5.componentDidUpdate\")\r\n    //     console.log({\r\n    //         prevProps: prevProps, PrevState:PrevState\r\n    //     })\r\n    // }\r\n\r\n    //Momento antes de que se vaya el componente de DOM\r\n    // componentWillUnmount() {\r\n    //     //console.log(\"6.componentWillUnmount\")\r\n    // }\r\n\r\n\r\n    render() {\r\n        //console.log(\"2/4.render()\")\r\n        //manejar cuando loading = true\r\n        // if(this.state.loading === true && this.state.data === undefined) {\r\n        //     return <PageLoading />\r\n        // }\r\n        if(this.state.loading === true && !this.state.data) {//Pide los datos de forma automática, la primera vez\r\n            return <PageLoading />\r\n        }\r\n\r\n        if(this.state.error) {//this.state.error === true \r\n            //return `Error: ${this.state.error.message}`\r\n            return <PageError error={this.state.error} />\r\n        }\r\n        return (\r\n            <div className=\"fondo\">\r\n                {/* <div className=\"Badges\">\r\n                    <div className=\"Badges__hero\">\r\n                        <div className=\"Badges__container\">\r\n                            <div className=\"badge-logos-container\">\r\n                                <Link to=\"/comingson\"><img className=\"Badges_conf-logo Badges_conf-logo-width\" src={ConfLogo} alt=\"Conf Logo\" /></Link>\r\n                                <a href=\"https://es.reactjs.org/\" target=\"_blank\"><img className=\"Badges_conf-logo react-logo\" src={ReactLogo} alt=\"Logo de React js\" /></a>\r\n                            </div>\r\n                            <div className=\"Badges__buttons\">\r\n                                \r\n                                <Link to=\"/badges/new\" className=\"btn btn-primary\">New Badge</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n\r\n                <div className=\"Badges__hero\">\r\n                    <div className=\"Badges__container\">\r\n                        {/* <div className=\"Badges__buttons\">\r\n                            <Link to=\"/badges/new\" className=\"btn btn-primary\">New Badge</Link>\r\n                        </div> */}\r\n\r\n                        \r\n                        \r\n                        <div className=\"Badges__list\">\r\n                            <div className=\"Badges__container\">\r\n                                <BadgesList badges={this.state.data}/>\r\n                                <div className=\"Badges\">\r\n                                    <div className=\"Badges__hero\">\r\n                                        <div className=\"Badges__container\">\r\n                                            <div className=\"Badges__buttons\">\r\n                                                <Link to=\"/Curso-React-JS-platzi-badges/badges/new\" className=\"btn btn-primary\">New Badge</Link>\r\n                                            </div>\r\n                                            <div className=\"badge-logos-container\">\r\n                                                <Link to=\"/comingson\"><img className=\"Badges_conf-logo Badges_conf-logo-width\" src={ConfLogo} alt=\"Conf Logo\" /></Link>\r\n                                                <a href=\"https://es.reactjs.org/\" target=\"_blank\"><img className=\"Badges_conf-logo react-logo\" src={ReactLogo} alt=\"Logo de React js\" /></a>\r\n                                            </div>\r\n                                        {/* <div className=\"Badges__buttons\">\r\n\r\n                                        <Link to=\"/badges/new\" className=\"btn btn-primary\">New Badge</Link>\r\n                                        </div> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {/* Añadimos un indicador si está en loading */}\r\n                                <div className=\"miniloader\">\r\n                                    {this.state.loading && <MiniLoader/>}\r\n                                </div>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Badges","import React from \"react\"\r\n// import header from \"../images/platziconf-logo.svg\"\r\nimport \"./styles/BadgeEdit.css\"\r\nimport Badge from \"../componets/badge\"\r\nimport BadgeForm from \"../componets/badgeForm\"\r\nimport api from \"../api\"\r\nimport PageLoading from \"../componets/pageLoading\"\r\nclass BadgeEdit extends React.Component {\r\n        state = { \r\n            loading: true,//este loading se inicializa en verdadero ya que estamos iniciando con una petición, estamos usando el id creado con el badge para que la página nos devuelva el resultado de la página del badge en badgeEdit\r\n            error: null,\r\n            form: {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            jobTitle: \"\",\r\n            twitter: \"\"\r\n        } \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n\r\n    fetchData = async (e) => {\r\n        this.setState({ loading: true, error: null })\r\n        try {\r\n            const data = await api.badges.read(\r\n                this.props.match.params.badgeId\r\n            )//read va a tomar el id del badge que nos interesa, usando los props, cada una de esas variables que insertamos en el path que declaramos en la ruta lo podemos acceder dentro del objeto params\r\n            this.setState({ loading: false, form: data })\r\n        } catch(error) {\r\n            this.setState({ loading: false, error: error })\r\n        }\r\n    }\r\n    \r\n    handleChange = e => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n            [e.target.name]: e.target.value,\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault()\r\n        this.setState({ loading: true, error: null })\r\n\r\n        try {\r\n            await api.badges.update(\r\n                this.props.match.params.badgeId,\r\n                this.state.form)//El handleSubmit ya no es de crear (create), es de actualizar (update),que recibe el id y la información que queremos actualizar\r\n            this.setState({ loading: false })\r\n            this.props.history.push(\"/badges\")\r\n\r\n        } catch (error) {\r\n            this.setState({ loading: false, error: error })\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        if (this.state.loading) {\r\n            return <PageLoading />\r\n        }\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"BadgeEdit__hero\">\r\n                    {/* <img className=\"BadgeEdit__hero-img img-fluid\" src={header} alt=\"Logo\"/> */}\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <Badge\r\n                                firstName={this.state.form.firstName || \"First Name\"} \r\n                                lastName={this.state.form.lastName || \"Last Name\"} \r\n                                jobTitle={this.state.form.jobTitle || \"Job Title\"}       \r\n                                twitter={this.state.form.twitter || \"Twitter\"}\r\n                                email={this.state.form.email}\r\n                                avatarUrl = \"https://media-exp1.licdn.com/dms/image/C5603AQFILCh7FRKErA/profile-displayphoto-shrink_200_200/0/1617145732921?e=1626307200&v=beta&t=lkVAqzsfDRPW5nmUDPnXEVA38bpJYTI6R8KKdqWlvxs\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                        <h1 className=\"h1-title\">Edit Attendant</h1>\r\n                            <BadgeForm \r\n                                onChange={this.handleChange}\r\n                                onSubmit={this.handleSubmit}\r\n                                formValues={this.state.form}\r\n                                error={this.state.error}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BadgeEdit","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./styles/Modal.css\"\r\n\r\nconst Modal = (props) => {\r\n    if (!props.isOpen) {\r\n        return null\r\n    }\r\n    return (\r\n        ReactDOM.createPortal(\r\n            <div className=\"Modal\">\r\n                <div className=\"Modal__container\">\r\n                    <button onClick={props.onClose} className=\"Modal__close-button\">X</button>\r\n                    {props.children}\r\n                    {/* Usar children nos pemite que en un futururo podamos especifiar de qué es este Modal, ya que por el momento solo estamos usando componentes genéricos.\r\n                    Esta técnica de usar componentes genéricos, para luego crear uno nuevo especializado se llama composición, y es una técnica muy poderosa que todo buen desarrollador debe aprender  */}\r\n                </div>\r\n            </div>\r\n            , document.getElementById(\"modal\")\r\n        )\r\n    )\r\n}\r\n\r\nexport default Modal","import React from \"react\"\r\nimport Modal from \"./modal\"\r\nimport \"../global.css\"\r\n//Ahora vamos a crear el componente especializado DeleteBadgeModal, a partir de los children que podamos asignar\r\nconst DeleteBadgeModal = (props) => {\r\n    return <Modal isOpen={props.isOpen} onClose={props.onClose} >\r\n        <div className=\"DeleteBadgeModal\">\r\n            <h1>Are You Sure?</h1>\r\n            <p>You are about to delete this badge.</p>\r\n        </div>\r\n        <div className=\"container-modal-buttons\">\r\n            <button onClick={props.onDeleteBadge} className=\"btn btn-danger margin-right-4-global mr-4\">Delete</button>\r\n            <button onClick={props.onClose} className=\" btn btn-primary\">Cancel</button>\r\n        </div>\r\n    </Modal>\r\n} \r\n\r\nexport default DeleteBadgeModal","//Cuando el componente se encargar de presentar la información, es decir la interfaz, basta con colocar solo el nombre del componente, en cambio si va a trabahar con la lógica, es decir, traerlos datos por ejemplo, se le agrega container al nombre, esto era una convención en react para ese momento\r\nimport React from \"react\"\r\n\r\nimport Badge from \"../componets/badge\"\r\nimport { Link } from \"react-router-dom\" \r\n// import ReactDOM from \"react-dom\"\r\n//import Modal from \"../componets/modal\"\r\n\r\nimport DeleteBadgeModal from \"../componets/deleteBadgeModal\"\r\nimport \"./styles/BadgeDetails.css\"\r\n//import confLogo from \"../images/platziconf-logo.svg\"\r\n\r\n//Hagamos nuestro propio custom hooks\r\n// const useIncreaseCount = (max) => {\r\n//     const [count, setCount] = React.useState(0)\r\n//     if (count > max) {\r\n//         setCount(0)\r\n//     }\r\n//     return[count, setCount]\r\n// }\r\nconst BadgeDetails = (props) => {\r\n    // const [count, setCount] = React.useState(0) //React.useState(\"argumentoOpcional\") nos va a regresar un arreglo con dos argumentos, es parecido a state y setState, con la diferencia que los nombres que tienen dichas variables se las damos nosotros. Al useState le podemos pasar un argumento para inicializar, pero es totalmente opcional\r\n    //const count = 3\r\n\r\n    // const [count, setCount] = useIncreaseCount(4)\r\n\r\n    //obtenemos el badge de la siguiente manera\r\n    const badge = props.badge\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"BadgeDetails__hero\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                {/* <div className=\"col-6\">\r\n                    <img src={confLogo} alt=\"Logo de la Conferencia\" />\r\n                </div> */}\r\n                <div className=\"col-6 BadgeDetails__hero-attendant-name\">\r\n                    {/* <h1>\r\n                    {badge.firstName} {badge.lastName}\r\n                    </h1> */}\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n    \r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                <Badge\r\n                    firstName={badge.firstName}\r\n                    lastName={badge.lastName}\r\n                    email={badge.email}\r\n                    twitter={badge.twitter}\r\n                    jobTitle={badge.jobTitle}\r\n                />\r\n                </div>\r\n                <div className=\"col container-actions\">\r\n                <h2>Actions</h2>\r\n                <div>\r\n                    <div className=\"button-container\">\r\n                    {/* Vamos a añadir un botón contador */}\r\n                    {/* <button onClick={() => {\r\n                        setCount(count + 1)\r\n                    }} className=\"btn btn-primary margin-right-4-global\">\r\n                        Increase Count: {count}\r\n                    </button> */}\r\n                    {/*De momento solo estamos usando el cambio de estado que nos da hooks para incrementar el contador, no el setState de la clase */}\r\n                    <Link\r\n                        className=\"btn btn-primary btn-action\"\r\n                        to={`/Curso-React-JS-platzi-badges/badges/${badge.id}/edit`}\r\n                    >\r\n                        Edit\r\n                    </Link>\r\n                    \r\n    \r\n                    \r\n                    <button onClick={props.onOpenModal} className=\"btn btn-danger btn-action\">Delete</button>\r\n                    {/* {ReactDOM.createPortal(qué, dónde)} */}\r\n                    {/* createPortal recibe dos argumentos, el qué voy a renderizar y dónde lo voy a renderizar, por ejemplo:\r\n                    \"modal\", tendríamos que buscarlo dentro de nuestro public index.html, donde debemos crear un nuevo nodo, donde lo vamos a renderizar */}\r\n                    <DeleteBadgeModal \r\n                            isOpen={props.modalIsOpen} \r\n                            onClose={props.onCloseModal}\r\n                            onDeleteBadge={props.onDeleteBadge}\r\n                        />\r\n                        {/* Como DeleteBadgeModal va a tener todo su contenido pre-definido, lo volvemos una etiqueta autoconclusiva */}\r\n\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default BadgeDetails","import React from \"react\"\r\nimport PageLoading from \"../componets/pageLoading\"\r\nimport PageError from \"../componets/pageError\"\r\nimport api from \"../api\"\r\nimport BadgeDetails from \"../pages/badgeDetails\"\r\nclass BadgeDetailsContainer extends React.Component {\r\n\r\n    state = {\r\n        loading: true,\r\n        error: null,\r\n        data: undefined,\r\n        modalIsOpen: false,\r\n        // data: {},\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n\r\n    fetchData = async () => {\r\n        this.setState({ loading: true, error: null })\r\n            \r\n        try {\r\n            //debemos pasar el id que lo obtenemos desde la url con this.props.match.params.badgeID\r\n            const data = await api.badges.read(\r\n                this.props.match.params.badgeId\r\n            ) \r\n            this.setState({ loading: false, data: data })//si conseguimos los datos los vamos a guardar acá\r\n        } catch(error) {\r\n            this.setState({ loading: false, error: error })\r\n        }\r\n    }\r\n\r\n    handleOpenModal = e => {\r\nthis.setState({ modalIsOpen: true,})\r\n    }\r\n\r\n    handleCloseModal = e => {\r\n        this.setState({ modalIsOpen: false,})\r\n    }\r\n\r\n    handleDeleteBadge = async e => {\r\n        this.setState({ loading: true, error: null })\r\n\r\n        try {\r\n            await api.badges.remove(\r\n                this.props.match.params.badgeId//recuerda que el id del badge lo obtenemos de la URL a travez de params\r\n            )\r\n            this.props.history.push(\"/badges\")//Esteprops no los da react-router, lo usamos para sacar al usuario de la página actual, modificando la URL insertando \"/badges\"\r\n            this.setState({ loading: false })\r\n        } catch(error) {\r\n            this.setState({ loading: false, error: error})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n        return <PageLoading />;\r\n        }\r\n    \r\n        if (this.state.error) {\r\n        return <PageError error={this.state.error} />;\r\n        }\r\n    \r\n        const badge = this.state.data;\r\n    \r\n        return (\r\n        <BadgeDetails\r\n            onCloseModal={this.handleCloseModal}\r\n            onOpenModal={this.handleOpenModal}\r\n            modalIsOpen={this.state.modalIsOpen}\r\n            onDeleteBadge={this.handleDeleteBadge}\r\n            badge={badge} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default BadgeDetailsContainer","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n//import logo from \"../images/logo.svg\"\r\nimport logo from \"../images/space.png\"\r\nimport \"./styles/Navbar.css\"\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"Navbar\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"Navbar__brand\" to=\"/Curso-React-JS-platzi-badges/\">\r\n                        <img className=\"Navbar__brand-logo\" src={logo} alt=\"logo\"/>\r\n                        <span className=\"fw-light\">Space</span>\r\n                        <span className=\"fw-bold\">Badges</span>\r\n                    </Link>\r\n                    {/* <a className=\"Navbar__brand\" href=\"/\">\r\n                        <img className=\"Navbar__brand-logo\" src={logo} alt=\"logo\"/>\r\n                        <span className=\"fw-light\">Platzi</span>\r\n                        <span className=\"fw-bold\">Conf</span>\r\n                    </a> */}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar ","import React from \"react\"\r\nimport Navbar from \"./navbar\"\r\nconst Layout = (props) => {\r\n    /**Para hacer que mis contenidos se rendericen dentro de la \"etiqueta\" Layout que estoy creando necesitamos usar un prop especial llamado children. En los componentes funcionales los props son su único argumento, los recibo en la función*/\r\n    //const children = props.children\r\n    return (\r\n        <React.Fragment>\r\n            <Navbar />\r\n            {props.children}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout","import React from \"react\"\r\nimport \"./styles/Home.css\"\r\nimport \"./styles/notFound.css\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport Error404 from \"../images/Error404.jpg\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"Home\">\r\n            <div className=\"container-error\">\r\n                <div>\r\n                    <Link to=\"/Curso-React-JS-platzi-badges/\">\r\n                        <img className=\"Error404-img\" src={Error404} alt=\"Error404: Not Found\" />\r\n                    </Link>\r\n                        <h1 className=\"error-mesagge\">Page Not Found</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './styles/Home.css'\r\n//import platziconfLogoImage from '../images/platziconf-logo.svg'\r\nimport spaceConfLogoImage from \"../images/space.png\"\r\n// import astronautsImage from '../images/astronauts.svg';\r\nimport DrStone from \"../images/Dr.Stone.jpg\"\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"Home__col col-12 col-md-4\">\r\n              <div className=\"title-container\">\r\n                <img\r\n                  src={spaceConfLogoImage}\r\n                  alt=\"Space Conf Logo\"\r\n                  className=\"img-fluid mb-2 space-logo img-fluid\"\r\n                />\r\n                {/* <h1>Badge Management System</h1> */}\r\n                <h1>Space Badges: Registrate Para la nueva convención espacial</h1>\r\n                <Link className=\"btn btn-primary btn-start\" to=\"/Curso-React-JS-platzi-badges/badges\">Start</Link>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"Home__col d-none d-md-block col-md-8\">\r\n              <img\r\n                // src={astronautsImage}\r\n                src={DrStone}\r\n                alt=\"Astronauts\"\r\n                className=\"img-fluid p-4 astronaut\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\r\nimport BadgeNew from \"../pages/badgeNew\"\r\nimport Badges from \"../pages/badges\"\r\nimport BadgeEdit from \"../pages/badgeEdit\"\r\nimport BadgeDetails from \"../pages/badgeDetailsContainer\"\r\nimport Layout from \"./layout\"\r\nimport NotFound from \"../pages/notFound\"\r\nimport Home from \"../pages/Home\"\r\n\r\nconst App = () => {\r\n    return (\r\n\r\n        <BrowserRouter>\r\n            <Layout>\r\n                <Switch>\r\n                    <Route exact path=\"/Curso-React-JS-platzi-badges/\" component={Home} />\r\n                    <Route exact path=\"/Curso-React-JS-platzi-badges/badges\" component={Badges} />\r\n                    <Route exact path=\"/Curso-React-JS-platzi-badges/badges/new\" component={BadgeNew} />\r\n                    <Route exact path=\"/Curso-React-JS-platzi-badges/badges//:badgeId/edit\" component={BadgeEdit} />\r\n                    <Route exact path=\"/Curso-React-JS-platzi-badges/badges/:badgeId\" component={BadgeDetails} />\r\n                    <Route component={NotFound}/> {/**Esta sería una página de \"Error404\", si ningún elemento coincide con las rutas, tomará este componente de \"error4\" */}\r\n                </Switch>\r\n            </Layout>\r\n        </BrowserRouter>\r\n        // <BrowserRouter>\r\n        //     <Layout>\r\n        //         <Switch>\r\n        //             <Route exact path=\"/\" component={Home} />\r\n        //             <Route exact path=\"/badges\" component={Badges} />\r\n        //             <Route exact path=\"/badges/new\" component={BadgeNew} />\r\n        //             <Route exact path=\"/badges/:badgeId/edit\" component={BadgeEdit} />\r\n        //             <Route exact path=\"/badges/:badgeId\" component={BadgeDetails} />\r\n        //             <Route component={NotFound}/> {/**Esta sería una página de \"Error404\", si ningún elemento coincide con las rutas, tomará este componente de \"error4\" */}\r\n        //         </Switch>\r\n        //     </Layout>\r\n        // </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n// import Badge from \"./componets/badge\"\r\n//import BadgeNew from \"./pages/badgeNew\"\r\n//import Badges from \"./pages/badges\"\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport \"./global.css\"\r\nimport App from \"./componets/app\"\r\nconst container = document.getElementById(\"app\")\r\n\r\nReactDOM.render(<App />, container)\r\n\r\n// ReactDOM.render(<Badge \r\n//     firstName=\"Alejandro\" \r\n//     lastName=\"Salazar\" \r\n//     jobTitle=\"Frontend Engineer in Training\"       \r\n//     twitter=\"dbriceno10\" \r\n//     avatarUrl = \"https://media-exp1.licdn.com/dms/image/C5603AQFILCh7FRKErA/profile-displayphoto-shrink_200_200/0/1617145732921?e=1626307200&v=beta&t=lkVAqzsfDRPW5nmUDPnXEVA38bpJYTI6R8KKdqWlvxs\" />, container)\r\n//A ReactDOM Siempre hay que darle un elemento, por lo tantolo que vamos a renderizar lo vamos a pasar entre brakets como una etiqueta autoconclusiva para asegurarnos\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const jsx = \r\n// <div>\r\n//     <h1>Hola Soy Daniel</h1>\r\n//     <p>Desarrollador frontend en formación</p>\r\n// </div>\r\n\r\n// const element = React.createElement(\"div\", {}, React.createElement(\"h1\", {}, \"Hola Soy Daniel\"), React.createElement(\"p\", {}, \"Soy un desarrollador frontend en formación\"))\r\n// const container = document.getElementById(\"app\")\r\n\r\n// ReactDOM.render(element, container)\r\n"],"sourceRoot":""}